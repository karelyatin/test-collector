version: '3.8'

services:
  ovn-metrics-collector:
    build: .
    image: ovn-metrics-collector:latest
    container_name: ovn-metrics-collector
    ports:
      - "9476:9476"  # Main metrics server
      - "9310:9310"  # OVN metrics server
    environment:
      - NODE_NAME=docker-node
    volumes:
      # Mount host OVS/OVN sockets if available
      - /var/run/openvswitch:/var/run/openvswitch:ro
      - /var/run/ovn:/var/run/ovn:ro
      # Mount kubeconfig if testing with Kubernetes
      - ${HOME}/.kube:/home/ovnmetrics/.kube:ro
    command:
      - --loglevel=4
      - --enable-pprof=true
      - --export-ovs-metrics=true
      - --metrics-interval=30
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9476/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for testing metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - ovn-metrics-collector

  # Grafana for visualizing metrics
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  grafana-storage: 